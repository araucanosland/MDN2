// <auto-generated />
using System;
using MDN.Dotacion.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MDN.Dotacion.Api.Data.Migrations
{
    [DbContext(typeof(DotacionDbContext))]
    partial class DotacionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dotacion")
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MDN.Dotacion.Api.Models.Ausentismo", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comentarios");

                    b.Property<DateTime>("FechaFin");

                    b.Property<DateTime>("FechaInicio");

                    b.Property<string>("Tipo");

                    b.HasKey("Id");

                    b.ToTable("Ausentismos");
                });

            modelBuilder.Entity("MDN.Dotacion.Api.Models.Colaborador", b =>
                {
                    b.Property<string>("Rut")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellidos");

                    b.Property<string>("Correo");

                    b.Property<string>("Nombres");

                    b.Property<string>("Sexo");

                    b.HasKey("Rut");

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("MDN.Dotacion.Api.Models.DotacionAsignada", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CargoAsignadoId");

                    b.Property<string>("ColaboradorAsignadoRut");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaDesde");

                    b.Property<DateTime?>("FechaHasta");

                    b.Property<int>("Periodo");

                    b.Property<string>("ReemplazoId");

                    b.Property<string>("TipoContrato");

                    b.HasKey("Id");

                    b.HasIndex("CargoAsignadoId");

                    b.HasIndex("ColaboradorAsignadoRut");

                    b.ToTable("DotacionAsignadas");
                });

            modelBuilder.Entity("MDN.Dotacion.Api.Models.DotacionAutorizada", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cargo");

                    b.Property<DateTime>("CreadoEn");

                    b.Property<DateTime?>("ModificadoEn");

                    b.Property<int>("Sucursal");

                    b.HasKey("Id");

                    b.ToTable("DotacionAutorizadas");
                });

            modelBuilder.Entity("MDN.Dotacion.Api.Models.DotacionAsignada", b =>
                {
                    b.HasOne("MDN.Dotacion.Api.Models.DotacionAutorizada", "CargoAsignado")
                        .WithMany()
                        .HasForeignKey("CargoAsignadoId");

                    b.HasOne("MDN.Dotacion.Api.Models.Colaborador", "ColaboradorAsignado")
                        .WithMany()
                        .HasForeignKey("ColaboradorAsignadoRut");
                });
#pragma warning restore 612, 618
        }
    }
}
