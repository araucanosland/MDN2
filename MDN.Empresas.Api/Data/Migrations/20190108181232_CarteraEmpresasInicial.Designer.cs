// <auto-generated />
using System;
using MDN.Empresas.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MDN.Empresas.Api.Data.Migrations
{
    [DbContext(typeof(EmpresasDBContext))]
    [Migration("20190108181232_CarteraEmpresasInicial")]
    partial class CarteraEmpresasInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("empresas")
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MDN.Empresas.Api.Models.AsignacionAnexoSucrsal", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CodigoSucursal");

                    b.Property<string>("EmpresaAnexoId");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaAnexoId");

                    b.ToTable("AsignacionesAnexoSucursal");
                });

            modelBuilder.Entity("MDN.Empresas.Api.Models.EjecutivoEncargado", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AsignacionAnexoSucrsalId");

                    b.Property<string>("Rut");

                    b.HasKey("Id");

                    b.HasIndex("AsignacionAnexoSucrsalId");

                    b.ToTable("EjecutivosEncargados");
                });

            modelBuilder.Entity("MDN.Empresas.Api.Models.Empresa", b =>
                {
                    b.Property<string>("Rut")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Holding");

                    b.Property<string>("Nombre");

                    b.HasKey("Rut");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("MDN.Empresas.Api.Models.EmpresaAnexo", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comuna");

                    b.Property<DateTime>("CreadoEn");

                    b.Property<string>("Direccion");

                    b.Property<string>("EmpresaRut");

                    b.Property<bool>("EsMatriz");

                    b.Property<DateTime?>("ModificadoEn");

                    b.Property<string>("Nombre");

                    b.Property<string>("Region");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaRut");

                    b.ToTable("EmpresaAnexos");
                });

            modelBuilder.Entity("MDN.Empresas.Api.Models.EmpresaProspecto", b =>
                {
                    b.Property<string>("Rut")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CajaOrigen");

                    b.Property<int>("CantidadTrabajadores");

                    b.Property<string>("Categoria");

                    b.Property<string>("Comuna");

                    b.Property<string>("Direccion");

                    b.Property<string>("Ejecutivo");

                    b.Property<DateTime>("FechaIngreso");

                    b.Property<string>("Nombre");

                    b.Property<string>("NombreHolding");

                    b.Property<int>("Oficina");

                    b.Property<string>("Region");

                    b.Property<string>("Rubro");

                    b.Property<string>("RutHolding");

                    b.Property<string>("Segmento");

                    b.HasKey("Rut");

                    b.ToTable("EmpresasProspecto");
                });

            modelBuilder.Entity("MDN.Empresas.Api.Models.EmpresaProspectoContacto", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Celular");

                    b.Property<string>("Ejecutivo");

                    b.Property<string>("Email");

                    b.Property<string>("EmpresaProspectoRut");

                    b.Property<DateTime>("FechaIngreso");

                    b.Property<string>("NombreContacto");

                    b.Property<int>("Oficina");

                    b.Property<string>("Telefono");

                    b.Property<string>("TipoContacto");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaProspectoRut");

                    b.ToTable("EmpresaProspectoContactos");
                });

            modelBuilder.Entity("MDN.Empresas.Api.Models.EmpresaProspectoGestion", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comentarios");

                    b.Property<string>("EmpresaProspectoRut");

                    b.Property<string>("Etapa");

                    b.Property<DateTime>("FechaGestion");

                    b.Property<DateTime>("FechaProximaGestion");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaProspectoRut");

                    b.ToTable("EmpresasProspectoGestiones");
                });

            modelBuilder.Entity("MDN.Empresas.Api.Models.AsignacionAnexoSucrsal", b =>
                {
                    b.HasOne("MDN.Empresas.Api.Models.EmpresaAnexo", "EmpresaAnexo")
                        .WithMany("Asignacion")
                        .HasForeignKey("EmpresaAnexoId");
                });

            modelBuilder.Entity("MDN.Empresas.Api.Models.EjecutivoEncargado", b =>
                {
                    b.HasOne("MDN.Empresas.Api.Models.AsignacionAnexoSucrsal", "AsignacionAnexoSucrsal")
                        .WithMany("EjecutivosEncargados")
                        .HasForeignKey("AsignacionAnexoSucrsalId");
                });

            modelBuilder.Entity("MDN.Empresas.Api.Models.EmpresaAnexo", b =>
                {
                    b.HasOne("MDN.Empresas.Api.Models.Empresa", "Empresa")
                        .WithMany("Anexos")
                        .HasForeignKey("EmpresaRut");
                });

            modelBuilder.Entity("MDN.Empresas.Api.Models.EmpresaProspectoContacto", b =>
                {
                    b.HasOne("MDN.Empresas.Api.Models.EmpresaProspecto", "EmpresaProspecto")
                        .WithMany("Contactos")
                        .HasForeignKey("EmpresaProspectoRut");
                });

            modelBuilder.Entity("MDN.Empresas.Api.Models.EmpresaProspectoGestion", b =>
                {
                    b.HasOne("MDN.Empresas.Api.Models.EmpresaProspecto", "EmpresaProspecto")
                        .WithMany("Gestiones")
                        .HasForeignKey("EmpresaProspectoRut");
                });
#pragma warning restore 612, 618
        }
    }
}
